
@{
    ViewBag.Title = "CreateAccount";
}

@model FaceBookApp.Models.User






<section class="login-form-wrap">
    <h1 style="color: white; text-align:center">Facebook</h1>


    @if (Model.id == 0)
    {
        <h3 style="color:white; text-align:center">Create Account</h3>
        <p>@Html.ActionLink("Already have an Acount?", "Login", "User")</p>

    }
    else
    {
        <h3 style="color:white; text-align:center">Edit Account</h3>
    }


    @using (Html.BeginForm("SaveAccount", "User", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        <div class="form-group">
            @Html.LabelFor(l => l.firstName)
            @Html.TextBoxFor(l => l.firstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(l => l.firstName)
        </div>

        <div class="form-group">
            @Html.LabelFor(l => l.lastName)
            @Html.TextBoxFor(l => l.lastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(l => l.lastName)
        </div>

        <div class="form-group">
            @Html.LabelFor(l => l.country)
            @Html.TextBoxFor(l => l.country, new { @class = "form-control" })
            @Html.ValidationMessageFor(l => l.country)
        </div>

        <div class="form-group">
            @Html.LabelFor(l => l.city)
            @Html.TextBoxFor(l => l.city, new { @class = "form-control" })
            @Html.ValidationMessageFor(l => l.city)
        </div>

        <div class="form-group">
            @Html.LabelFor(l => l.mobileNo)
            @Html.TextBoxFor(l => l.mobileNo, new { @class = "form-control" })
            @Html.ValidationMessageFor(l => l.mobileNo)
        </div>


        if (Model.id == 0)
        {
            <div class="form-group">
                @Html.LabelFor(l => l.email)
                @Html.TextBoxFor(l => l.email, new { @class = "form-control" })
                @Html.ValidationMessageFor(l => l.email)
            </div>
        }
        else
        {
            @Html.HiddenFor(l => l.email)

        }


        <div class="form-group">
            @Html.LabelFor(l => l.password)
            @Html.TextBoxFor(l => l.password, new { @class = "form-control", type = "password" })
            @Html.ValidationMessageFor(l => l.password)
        </div>

        <div class="form-group">
            @Html.LabelFor(l => l.confirmPassWord)
            @Html.TextBoxFor(l => l.confirmPassWord, new { @class = "form-control", type = "password" })
            @Html.ValidationMessageFor(l => l.confirmPassWord)
        </div>


        @Html.LabelFor(l => l.profileImage)
        <input type="file" name="file" id="file" />
        <br />


        @Html.HiddenFor(l => l.id)


        if (Model.id == 0)
        {

            <button type="submit" class="btn btn-success">
                Create Account
            </button>

        }
        else
        { <button type="submit" class="btn btn-success">
                Save Changes
            </button>

        }


        <button type="reset" class="btn btn-danger">Reset</button>



    }

</section>




    <style>

        * {
            box-sizing: border-box;
        }



        html {
            background-color: #3C5898
        }



        body {
            background-color: #3C5898;
            margin: 0;
            padding: 0;
            font-family: 'Lato', sans-serif;
        }

        .login-form-wrap {
            background: radial-gradient(ellipse at center, rgba(81,112,173,1) 0%,rgba(53,84,147,1) 100%);
            border: 1px solid #2d416d;
            box-shadow: 0 1px #5670A4 inset, 0 0 10px 5px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
            width: 360px;
            margin: 60px auto;
            padding: 50px 30px 0 30px;
            text-align: center;
            h1

        {
            margin: 0 0 50px 0;
            padding: 0;
            font-size: 26px;
            color: #fff;
        }

        h5 {
            margin-top: 40px;
        }

            h5 > a {
                font-size: 14px;
                color: #fff;
                text-decoration: none;
                font-weight: 400;
            }

        }

        .login-form {
            & input[type="email"], input[type="password"],

        {
            width: 100%;
            border: 1px solid #314d89;
            outline: none;
            padding: 12px 20px;
            color: #afafaf;
            font-weight: 400;
            font-family: 'Lato', sans-serif;
            cursor: pointer;
        }

        & input[type="email"] {
            border-bottom: none;
            border-radius: 4px 4px 0 0;
            padding-bottom: 13px;
            box-shadow: 0 -1px 0 #E0E0E0 inset, 0 1px 2px rgba(0, 0, 0, 0.23) inset;
        }

        & input[type="password"] {
            border-top: none;
            border-radius: 0 0 4px 4px;
            box-shadow: 0 -1px 2px rgba(0, 0, 0, 0.23) inset, 0 1px 2px rgba(255, 255, 255, 0.1);
        }

        & input[type="submit"] {
            font-family: 'Lato', sans-serif;
            font-weight: 400;
            background: linear-gradient(to bottom, rgba(224,224,224,1) 0%,rgba(206,206,206,1) 100%);
            display: block;
            margin: 20px auto 0 auto;
            width: 100%;
            border: none;
            border-radius: 3px;
            padding: 8px;
            font-size: 17px;
            color: #636363;
            text-shadow: 0 1px 0 rgba(255, 255, 255, 0.45);
            font-weight: 700;
            box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.17), 0 1px 0 rgba(255, 255, 255, 0.36) inset;
            &:hover

        {
            background: #DDD;
        }

        &:active {
            padding-top: 9px;
            padding-bottom: 7px;
            background: #C9C9C9;
        }

        }
        }


        .login-form-wrap  {
            color: white;
            text-align: left;
        }
    </style>
